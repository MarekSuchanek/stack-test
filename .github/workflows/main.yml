name: Stack Test CI

on:
  push:
  pull_request:

jobs:
  btp:
    name: Build-Tag-Push
    runs-on: ubuntu-16.04
    
    strategy:
      matrix:
        stack: [2.1.3]
    
    env:
      TAG_DEVELOP: develop
      TAG_LATEST: latest
      STACK_VERSON: ${{ matrix.stack }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Prepare ~/.local/bin
      run: |
        mkdir -p ~/.local/bin
        export PATH=~/.local/bin:$PATH

# (1) -> Setup cache
    - name: Cache ~/.stack
      id: cache-stack
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: stack-home-ubuntu16-${{ hashFiles('**/stack.yaml.lock') }}
        restore-keys: |
          stack-home-ubuntu16-
    
    - name: Cache .stack-work
      id: cache-stack-work
      uses: actions/cache@v1
      with:
        path: .stack-work
        key: stack-work-ubuntu16-${{ hashFiles('**/*.hs') }}
        restore-keys: |
          stack-work-ubuntu16-${{ hashFiles('**/*.hs') }}
          stack-work-ubuntu16-
    
    - name: Cache Stack in ~/.local/bin
      id: cache-stack-local-bin
      uses: actions/cache@v1
      with:
        path: ~/.local/bin
        key: stack-local-bin-ubuntu16-${{ matrix.stack }}
        
    - name: Debug PRE
      run: |
        ls -la -R .stack-work

# (2) -> Prepare and install dependencies     
    - name: Setup stack
      run: |
        if [ ! -f ~/.local/bin/stack ]; then
          curl -L https://github.com/commercialhaskell/stack/releases/download/v$STACK_VERSON/stack-$STACK_VERSON-linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
        fi
        
# (3) -> Build binary
    - name: Build and test application
      run: |
        stack build -v --no-terminal --skip-ghc-check
        
    - name: Debug POST
      run: |
        ls -la -R .stack-work
        